command_type: system
ignore:
    - "*.py"
    - "*.sh"
    - "*.md"

variables:
  - &run-test
    name: test
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/logkeeper
      - func: run-make
        vars: { target: "${task_name}" }

exec_timeout_secs: 21600 # tasks will time out after 6 hours

functions:
  run-make:
    command: shell.exec
    type: test
    params:
       script: |
         set -o errexit
         set -o verbose

         # Configure a local go path for this build.
         export GOPATH=`pwd`/gopath

         # on windows we need to turn the slashes the other way
         if [ "Windows_NT" == "$OS" ]; then
            export GOPATH=$(cygpath -m $GOPATH)
         fi

         cd gopath/src/github.com/evergreen-ci/logkeeper

         # Run make, called with proper environment variables set,
         # running the target.
         ${build_env} make ${make_args|} ${target}

tasks:
  - name: dist
    tags: ["dist"]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/logkeeper
      - func: run-make
        vars: { target: "dist" }
      - command: s3.put
        type: system
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: gopath/src/github.com/evergreen-ci/logkeeper/build/${task_name}.tar.gz
          remote_file: logkeeper/${build_id}-${build_variant}/logkeeper-${task_name}-${revision}.tar.gz
          bucket: mciuploads
          content_type: application/x-gzip
          permissions: public-read
          display_name: dist.tar.gz
  - name: coverage
    tags: [ "report" ]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/logkeeper
      - func: run-make
        vars:
          target: "coverage-html"
          make_args: "-k"
      - command: s3.put
        type: system
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_files_include_filter: ["gopath/src/github.com/evergreen-ci/logkeeper/bin/output.*.coverage.html"]
          remote_file: logkeeper/${task_id}/
          bucket: mciuploads
          content_type: text/html
          permissions: public-read
          display_name: "(html) coverage:"
      - command: s3.put
        type: system
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_files_include_filter: ["gopath/src/github.com/evergreen-ci/logkeeper/bin/output.*.coverage"]
          remote_file: logkeeper/${task_id}/
          bucket: mciuploads
          content_type: text/plain
          permissions: public-read
          display_name: "(txt) coverage:"
  - <<: *run-test
    name: lint
    tags: ["report"]
  - <<: *run-test
    name: test-storage
    exec_timeout_secs: 900
    tags: ["test"]
  - <<: *run-test
    name: test-logkeeper
    exec_timeout_secs: 900
    tags: ["test"]
  - <<: *run-test
    name: test-model
    exec_timeout_secs: 900
    tags: ["test"]
  - <<: *run-test
    name: test-smoke
    exec_timeout_secs: 900
    tags: ["test"]
  - <<: *run-test
    name: race-logkeeper
    exec_timeout_secs: 900
    tags: ["race"]

post:
  - command: gotest.parse_files
    type: setup
    params:
      files:
        - "gopath/src/github.com/evergreen-ci/logkeeper/build/output.*"

buildvariants:
  - name: ubuntu2204
    tags: ["code_health"]
    display_name: Ubuntu 22.04
    expansions:
      build_env: "GOROOT=/opt/golang/go1.16 PATH=/opt/golang/go1.16/bin:$PATH"
    run_on:
      - ubuntu1804-small
    tasks:
      - ".dist"
      - ".test"
      - ".report"

  - name: race-detector
    tags: ["code_health"]
    display_name: Race Detector
    expansions:
      build_env: "GOROOT=/opt/golang/go1.16 PATH=/opt/golang/go1.16/bin:$PATH"
    run_on:
      - ubuntu2204-small
    tasks:
      - ".race"

  - name: macos
    tags: ["code_health"]
    display_name: macOS
    expansions:
      build_env: "GOROOT=/opt/golang/go1.16 PATH=/opt/golang/go1.16/bin:$PATH"
    run_on:
      - macos-1100
    tasks:
      - ".dist"
      - ".test"
